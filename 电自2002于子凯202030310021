  感受：我的直观感觉C++就是面向对象的，相比C语言是面向过程来说，代码更加简洁，逻辑更加简单，减少逻辑上时间。但对我来说，C++意味着需要掌握更多的知识语法，
不过在已有C语言的基础上，我觉得会更容易上手。直观感觉就是吃了德芙一样丝滑，但是需要掌握的更多了。（关键字有点多，完全记不住）
  我觉得我需要认真听课，翻课本的同时，还要上B站在看点C++的视频，才能更好的消化吸收。

  2.1C++的主要特点，最直观的就是面向对象。并且是具有抽象，封装，继承，多态的特点的（翻课本）。
  2.4根据C语言的知识来判断，不能编译是因为没有在引用之前声明一下。或者可以把sum放在int main前面。这就说明了C++是在C语言的基础上进行的。
  2.5第一个函数原型是等价的，因为定义的函数形参可以不用写变量名（变量类型一定要写）。第二个两个函数的第一行的形参的变量名一定要有。
  2.10重载函数在调用时，最主要的就是根据函数的函数名字，参数个数，参数的类型，与函数的返回类型无关，重载函数是函数的一种特殊情况，同名，但是参数的类型和个数必须有所区别
  比如max（int a,int b);
      max(double a,double b);
      如果我写的是max（4.5，6.9）；
      那我肯定调用的是double类型的形参。
  2.11内联函数inline会在编译时，将函数展开成函数体代码，减少函数调用的同时，会增大代码的体积。要考虑在类的定义体外还是内部，所以比较复杂。
  递归函数因为需要反复循环调用，所以不可能实现内联。
  2.12递归函数不能使用。
  2.13只有在指定默认值左边可以出现没有默认值的情况，因为系统默认会是零，而在之后不出现，就会报错。这也体现了C++语言逻辑上的严谨性。
  2.15跟2.10差不多参数列表必须不同，也就是参数的个数或者参数类型不同即可。
  2.18答案是101.全局变量等于在局部变量i加了一个1（此时局部变量为100）。
  2.19答案是10 10。就是简单的中间变量交换数值。（这点跟C语言没啥区别。）
  2.21const和define最主要的区别是从上图是在局部定义而define是在全局定义会起一定的冲突。
  例如：
  #define P 3.14
  int main()
  {
   double s = P*9;
   }
   fun()
   {
      double P = 3.1415;
      l=2*P*3;
   }
   而const
     int main()
  {
      const double P =3.14;
       double s = P*9;
   }
   fun()
   {
      const double P=3.1415;
      l=2*P*3;
   }
   

