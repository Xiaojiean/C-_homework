#include<iostream>
#include<string>
using namespace std;
class MyArray {
public:
	MyArray(int length);
	~MyArray();
	void Input();
	void Display(string);
protected:
	int* alist;
	int length;
};
MyArray::MyArray(int leng)
{
	if (leng <= 0)
	{
		cout << "error length";
		exit(1);
	}
	length = leng;
	alist = new int[length];
	if (alist == NULL)
	{
		cout << "assign failure";
		exit(1);
	}
	cout << "MyArray类对象已创建!" << endl;
};
MyArray::~MyArray()
{
	delete[] alist;
	cout << "MyArray类对象已撤销!" << endl;
}
class SortArray :public MyArray
{
public:
	int n, b[100], temp = 0;
	void sort();
};
void SortArray::sort()
{
	int* p = alist, temp, i;
	for (n = 0; n < length; n++, p++)
	{
		b[n] = *p;
	}
	for (n = 0; n < length; n++)
		for (i = 0; i <= n; i++)
		{
			if (b[i] > b[i + 1])
			{
				temp = b[i];
				b[i] = b[i + 1];
				b[i + 1] = temp;
			}
		}
	for (i = 0; i <= length; i++)
	{
		cout << b[i] << " ";
	}
};

void MyArray::Display(string str)
{
	int i;
	int* p = alist;
	cout << str << length << "个整数: ";
	for (i = 0; i < length; i++, p++)
		cout << *p << " ";
	cout << endl;
};
void MyArray::Input()
{
	cout << "请从键盘输入" << length << "个整数:";
	int i;
	int* p = alist;
	for (i = 0; i < length; i++, p++)
		cin >> *p;
}
int main()
{
	MyArray a(5);
	a.Input();
	a.Display("显示已经输入的");
    SortArray b();
    b.sort();
	return 0;
}
