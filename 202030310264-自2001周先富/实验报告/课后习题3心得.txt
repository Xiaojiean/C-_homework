1.值传递和址传递，址传递会真正改变，引用传递&x作用相当起别名
使用对象指针作为函数 参数可以实现“传址调用”
2.在类中，默认是private
private:私有的,不可见的。成员只能在内部使用,类外不能调用
public:公开的，可见的。成员可以在外使用
protected:类外不能访问，派生类可以访问
3.​ 构造函数是类的一个特殊成员变量，构造函数的作用是在创建对象的时候对对象的数据成员进行初始化
（1）构造函数与类名相同，且没有返回值，定义构造函数时，在函数名前什么也不能加（void也不可以加）；
（2）构造函数不需要用户调用，他是由系统在创建对象时自动调用的。构造函数要声明为public访问属性；
（3）构造函数的作用是在创建对象的时候对对象的数据成员进行初始化，一般在构造函数的函数体里写对类对象的数据成员初始化的语句
析构函数在类名前加~，作用与构造函数相反，用法相同
4.由关键字static 修饰说明的成员，称为静态成员；静态成员为所有对象共享，只有一份存于公用内存中；静态成员包括静态数据成员和静态函数成员
静态数据成员初始化应在类外单独进行，但应在定义对象之前进行，一般在main之前；静态成员函数没有this指针，而非静态成员函数有this指针
5.类的友元函数是定义在类外部，但有权访问类的所有私有（private）成员和保护（protected）成员
特点：提高效率和方便编程，不过破坏了类的整体操作性，也破坏了类的封装
6.C++为成员函数提供了一个名字为this的指针,这个指针称为自引用指针。每当创建一个对象时,系统就把 this指针初始化为指向该对象,即 this指针的值是当前被调用的成员函数所在的对象的起始地址。
每当调用一个成员函数时,系统就自动把 this 指针作为一个隐含的参数传给该函数。不同的对象调用同一个成员函数时,C++编译器将根据成员函数的this指针所指向的对象来确定应该引用哪一个对象的数据成员。

Copyright ©2021-2099 zhouxianfu.All rights reserved
