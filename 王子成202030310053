2.1
1、在C语言的基础上进行扩充和完善，使C++兼容了C语言的面向过程特点，又成为了一种面向对象的程序设计语言；
2、可以使用抽象数据类型进行基于对象的编程；
3、可以使用多继承、多态进行面向对象的编程；
4、可以担负起以模版为特征的泛型化编程。
2.4
缺少函数原型语句
2.5
（1）等价
（2）不等价
2.10
B
2.11
A
2.12
C
2.13
C
2.15
C
2.18
101
2.19
10   10
2.21
#include<iostream> 
using namespace std;
#define A2 + 4 
#define B A*3
 int main ()
{ cout<<B<<end1;
 return 0；
 }
上面程序的运行结果是14，而不是18，但很容易被认为是18。
下面程序使用const替代了#define，就可以消除#define的不安全性：
#include<iostream>
using namespace std;
const A= 2 + 4；
const B=A+3;
 int main ()
{ cout<<B<<end1；
 return 0； }
使用const以后，运行结果是18。
心得感悟
经过三个星期对于面向对象的程序设计的学习，我感受到了这门课程的实用性和便利性，它和之前的C语言有一定的相关性但也有很多不同之处，它也比C语言更加先进便捷，有着其独特的优势。
